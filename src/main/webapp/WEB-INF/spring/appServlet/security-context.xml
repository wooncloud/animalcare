<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:http auto-config="true" use-expressions="true">
		<security:csrf disabled="true" />
		<security:intercept-url pattern="/**" access="permitAll" />
		
<!-- 		<security:intercept-url pattern="/security/member" access="hasRole('ROLE_MEMBER')" /> -->
		<security:form-login login-page="/login.do"
			authentication-success-handler-ref="loginSuccessHandler"
			authentication-failure-handler-ref="loginFailureHandler"
			login-processing-url="/auth" username-parameter="id"
			password-parameter="pw" />
			
		<security:logout logout-url="/logout.do" invalidate-session="true" logout-success-url="/login.do?status=logout" />
		
		<security:session-management invalid-session-url="/login.do">
			<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false" />
		</security:session-management>
	</security:http>
	
	<!-- secured method -->
	<security:global-method-security secured-annotations="enabled" />
	
	<!-- provider -->
<!-- 	<security:authentication-manager> -->
<!-- 		<security:authentication-provider ref="userAuthHelper"> -->
			
<!-- 		</security:authentication-provider> -->
<!-- 	</security:authentication-manager> -->
	
	<bean id="loginSuccessHandler" class="com.pet.care.security.LoginSuccessHandler">
		<property name="defaultTargetUrl" value="/" />
		<property name="alwaysUseDefaultTargetUrl" value="true" />
	</bean>
	
	<bean id="loginFailureHandler" class="com.pet.care.security.LoginFailureHandler">
		<property name="defaultFailureUrl" value="/login?status=fail" />
	</bean>
	
	<bean id="userAuthService" class="com.pet.care.security.UserAuthService" />
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<bean id="userAuthProvider" class="com.pet.care.security.UserAuthProvider">
		<property name="userDetailsService" ref="userAuthService" />
		<property name="passwordEncoder" ref="passwordEncoder" />
	</bean>
</beans>