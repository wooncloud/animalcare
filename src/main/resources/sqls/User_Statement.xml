<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pet.care.model.dao.user.IUserDao">

	<!-- 로그인 - 이메일, 비밀번호 입력하여 조회 -->
	<select id="userLogin" parameterType="java.util.Map" resultType="MemberDto">
		SELECT EMAIL, NAME, USERTYPE, DELFLAG
		FROM (
			SELECT EMAIL, NAME, PASSWORD, DELFLAG, 'ROLE_ADMIN' AS USERTYPE FROM ADMININFO
			UNION
			SELECT EMAIL, NAME, PASSWORD, DELFLAG, 'ROLE_OPER' AS USERTYPE FROM OPERATORINFO
			UNION
			SELECT EMAIL, NAME, PASSWORD, DELFLAG, 'ROLE_USER' AS USERTYPE FROM USERINFO
		) 
		WHERE EMAIL = #{email} AND PASSWORD = #{password} AND DELFLAG = 'N'
	</select>


	<!-- 이메일 중복검사 - 중복된 이메일 조회 -->
	<select id="emailDuplCheck" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM 
		(
			SELECT EMAIL FROM ADMININFO
			UNION
			SELECT EMAIL FROM OPERATORINFO
			UNION
			SELECT EMAIL FROM USERINFO
		)
		WHERE EMAIL = #{email}
	</select>


	<!-- 회원 등록 - 이메일, 이름, 비밀번호, 전화번호, 주소, 상세주소 입력 -->
	<insert id="insertUser" parameterType="UserDto">
		INSERT INTO USERINFO
		(
			EMAIL, NAME, PASSWORD, 
			ADDRESS1, ADDRESS2, PHONE, 
			REGDATE, DELFLAG
		)
		VALUES(
			#{email}, #{name}, #{password}, 
			#{address1}, #{address2}, #{phone}, 
			SYSDATE, 'N'
		)
	</insert>


	<!-- 병원관계자 가입 신청 - 이메일, 이름, 비밀번호, 전화번호, 사업자 등록번호, 면허번호 입력, 가입신청 기본 비허가 -->
	<insert id="insertOper" parameterType="OperDto">
		INSERT INTO OPERATORINFO
		(
			EMAIL, NAME, PASSWORD, 
			PHONE, CORPREGNUM, LICENSENUM, 
			REGDATE, APPROVALFLAG, DELFLAG
		)
		VALUES(
			#{email}, #{name}, #{password}, 
			#{phone}, #{corpregnum}, #{licensenum}, 
			SYSDATE, 'S', 'N'
		)
	</insert>


	<!-- 가입신청 병원관계자 조회 - 가입신청 비허가 처리된 병원관계자 조회 -->
	<select id="grantWaitList" resultType="OperDto">
		SELECT EMAIL, NAME, PHONE,
			CORPREGNUM, LICENSENUM, REGDATE,
			APPROVALFLAG, DELFLAG
		FROM OPERATORINFO
		WHERE APPROVALFLAG = 'S' AND DELFLAG = 'N'
	</select>


	<!-- 가입신청 처리 - 가입신청을 승인 or 거부 로 변경 -->
	<update id="grantOper" parameterType="java.util.Map">
		UPDATE OPERATORINFO SET APPROVALFLAG = #{approvalflag}
		WHERE EMAIL = #{email}
	</update>


	<!-- 병원관계자 정보 조회 - 회원 정보 조회 -->
	<select id="detailOper" parameterType="java.lang.String" resultType="OperDto">
		SELECT EMAIL, NAME, PHONE, CORPREGNUM, LICENSENUM, APPROVALFLAG
		FROM OPERATORINFO
		WHERE EMAIL = #{email} AND DELFLAG = 'N'
	</select>


	<!-- 병원관계자 정보 수정 - 회원 정보 수정 -->
	<update id="modifyOper" parameterType="java.util.Map">
		UPDATE OPERATORINFO
		SET
		<choose>
			<when test="phone != null">
				PHONE = #{phone}
			</when>
			<when test="password != null">
				PASSWORD = #{password}
			</when>
		</choose>
		WHERE EMAIL = #{email}
	</update>


	<!-- 병원관계자  탈퇴 - 회원 휴면 처리 -->
	<update id="dormancyOper" parameterType="java.lang.String">
		UPDATE OPERATORINFO
		SET DELFLAG = 'Y'
		WHERE EMAIL = #{email}
	</update>


	<!-- 병원관계자  삭제 - 회원 진짜 삭제 -->
	<delete id="deleteOper" parameterType="java.lang.String">
		DELETE FROM OPERATORINFO
		WHERE EMAIL = #{email}
	</delete>


	<!-- 회원 정보 조회 - 회원 정보 조회 -->
	<select id="detailUser" parameterType="java.lang.String" resultType="UserDto">
		SELECT EMAIL, NAME, ADDRESS1, ADDRESS2, PHONE
		FROM USERINFO
		WHERE EMAIL = #{email} AND DELFLAG = 'N'
	</select>


	<!-- 회원 정보 수정 - 회원 정보 수정 -->
	<update id="modifyUser" parameterType="java.util.Map">
		UPDATE USERINFO
		SET
		<choose>
			<when test="phone != null">
				PHONE = #{phone}
			</when>
			<when test="password != null">
				PASSWORD = #{password}
			</when>
			<when test="address1 != null">
				address1 = #{address1}, address2 = #{address2}
			</when>
		</choose>
		WHERE EMAIL = #{email}
	</update>


	<!-- 회원 탈퇴 - 회원 휴면 처리 -->
	<update id="dormancyUser" parameterType="java.lang.String">
		UPDATE USERINFO
		SET DELFLAG = 'Y'
		WHERE EMAIL = #{email}
	</update>


	<!-- 회원 삭제 - 회원 진짜 삭제 -->
	<delete id="deleteUser" parameterType="java.lang.String">
		DELETE FROM USERINFO WHERE EMAIL = #{email}
	</delete>

	<select id="emailSecurity" parameterType="java.lang.String" resultType="MemberDto">
		SELECT EMAIL, NAME, USERTYPE, DELFLAG
		FROM (
			SELECT EMAIL, NAME, PASSWORD, DELFLAG, 'ROLE_ADMIN' AS USERTYPE FROM ADMININFO
			UNION
			SELECT EMAIL, NAME, PASSWORD, DELFLAG, 'ROLE_OPER' AS USERTYPE FROM OPERATORINFO
			UNION
			SELECT EMAIL, NAME, PASSWORD, DELFLAG, 'ROLE_USER' AS USERTYPE FROM USERINFO
		) 
		WHERE EMAIL = #{email} AND DELFLAG = 'N'
	</select>

	<select id="pwSecurity" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT PASSWORD
		FROM (
			SELECT EMAIL, NAME, PASSWORD, DELFLAG, 'ROLE_ADMIN' AS USERTYPE FROM ADMININFO
			UNION
			SELECT EMAIL, NAME, PASSWORD, DELFLAG, 'ROLE_OPER' AS USERTYPE FROM OPERATORINFO
			UNION
			SELECT EMAIL, NAME, PASSWORD, DELFLAG, 'ROLE_USER' AS USERTYPE FROM USERINFO
		) 
		WHERE EMAIL = #{email} AND DELFLAG = 'N'
	</select>
	
	<insert id="insertVerificationCode" parameterType="java.util.Map">
		INSERT INTO VERIFICATION (EMAIL, EMAIL_CONFIRM, PHONE_CONFIRM, REGDATE)
		<choose>
			<when test="phone_confirm != null">
				VALUES(#{email}, '', #{phone_confirm}, SYSDATE)			
			</when>
			<otherwise>
				VALUES(#{email}, #{email_confirm}, '', SYSDATE)
			</otherwise>
		</choose>
	</insert>
	
	<select id="getVerificationCode" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT EMAIL_CONFIRM, PHONE_CONFIRM
		FROM VERIFICATION
		WHERE EMAIL = #{email}
	</select>
	
	<delete id="deleteVerification" parameterType="java.lang.String">
		DELETE FROM VERIFICATION WHERE EMAIL = #{email}
	</delete>
</mapper>
